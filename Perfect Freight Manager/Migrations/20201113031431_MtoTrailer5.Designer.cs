// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Perfect_Freight_Manager.Models;

namespace Perfect_Freight_Manager.Migrations
{
    [DbContext(typeof(AplicationContext))]
    [Migration("20201113031431_MtoTrailer5")]
    partial class MtoTrailer5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DataAccess.Models.CityState", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("citystates");
                });

            modelBuilder.Entity("DataAccess.Models.Clients", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("address2")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("codezip")
                        .HasColumnType("text");

                    b.Property<string>("emailaddress")
                        .HasColumnType("text");

                    b.Property<string>("faxnumber")
                        .HasColumnType("text");

                    b.Property<string>("mainphonenumber")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("officedayhours")
                        .HasColumnType("text");

                    b.Property<string>("ownername")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("website")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("DataAccess.Models.CodeZIp", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("areacode")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("county")
                        .HasColumnType("text");

                    b.Property<string>("lat")
                        .HasColumnType("text");

                    b.Property<string>("longt")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("zipcode")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("codezips");
                });

            modelBuilder.Entity("DataAccess.Models.Expense", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("apu")
                        .HasColumnType("text");

                    b.Property<string>("apuhours")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("codezip")
                        .HasColumnType("text");

                    b.Property<string>("contact")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("invoicenumber")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("payment")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.Property<string>("pmtruck")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("trailer")
                        .HasColumnType("text");

                    b.Property<string>("trailermileage")
                        .HasColumnType("text");

                    b.Property<string>("truck")
                        .HasColumnType("text");

                    b.Property<string>("truckmileage")
                        .HasColumnType("text");

                    b.Property<string>("vendor")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("expenses");
                });

            modelBuilder.Entity("DataAccess.Models.Insurance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("address2")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("codezip")
                        .HasColumnType("text");

                    b.Property<string>("contactname")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("faxnumber")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("phonenumber")
                        .HasColumnType("text");

                    b.Property<string>("phonetollfree")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("website")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("insurances");
                });

            modelBuilder.Entity("DataAccess.Models.PhoneBook", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("birthay")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("codezip")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("faxnumber")
                        .HasColumnType("text");

                    b.Property<string>("homephone")
                        .HasColumnType("text");

                    b.Property<string>("lastname")
                        .HasColumnType("text");

                    b.Property<string>("mobilephone")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("workphone")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("phonebooks");
                });

            modelBuilder.Entity("DataAccess.Models.RVExpenses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("cargostatus")
                        .HasColumnType("text");

                    b.Property<string>("cost")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("idrevenue")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("rvexpenses");
                });

            modelBuilder.Entity("DataAccess.Models.RVFuel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("advance")
                        .HasColumnType("text");

                    b.Property<string>("cost")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("def")
                        .HasColumnType("text");

                    b.Property<string>("idrevenue")
                        .HasColumnType("text");

                    b.Property<string>("invoicenumber")
                        .HasColumnType("text");

                    b.Property<string>("mileage")
                        .HasColumnType("text");

                    b.Property<string>("payment")
                        .HasColumnType("text");

                    b.Property<string>("premileage")
                        .HasColumnType("text");

                    b.Property<string>("quantity")
                        .HasColumnType("text");

                    b.Property<string>("rf")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("total")
                        .HasColumnType("text");

                    b.Property<string>("truckstop")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("rvfuels");
                });

            modelBuilder.Entity("DataAccess.Models.RVNotes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("idrevenue")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("rvnotes");
                });

            modelBuilder.Entity("DataAccess.Models.RVPickupDrop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("appoinmentdate")
                        .HasColumnType("text");

                    b.Property<string>("arrivadate")
                        .HasColumnType("text");

                    b.Property<string>("customerliveload")
                        .HasColumnType("text");

                    b.Property<string>("driver")
                        .HasColumnType("text");

                    b.Property<string>("endcs")
                        .HasColumnType("text");

                    b.Property<string>("idrevenue")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("pickdroptype")
                        .HasColumnType("text");

                    b.Property<string>("startcs")
                        .HasColumnType("text");

                    b.Property<string>("startdate")
                        .HasColumnType("text");

                    b.Property<string>("totaltime")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("rvpickupdrops");
                });

            modelBuilder.Entity("DataAccess.Models.Receipt", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("receiptphoto")
                        .HasColumnType("bytea");

                    b.HasKey("id");

                    b.ToTable("receipts");
                });

            modelBuilder.Entity("DataAccess.Models.Revenue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ammount")
                        .HasColumnType("text");

                    b.Property<string>("bonus")
                        .HasColumnType("text");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("chassisid")
                        .HasColumnType("text");

                    b.Property<string>("chkfactorydate")
                        .HasColumnType("text");

                    b.Property<string>("chkfactorypaid")
                        .HasColumnType("text");

                    b.Property<string>("client")
                        .HasColumnType("text");

                    b.Property<string>("contact")
                        .HasColumnType("text");

                    b.Property<string>("datefrompaid")
                        .HasColumnType("text");

                    b.Property<string>("datepaid")
                        .HasColumnType("text");

                    b.Property<string>("datetopaid")
                        .HasColumnType("text");

                    b.Property<string>("deadheadfrom")
                        .HasColumnType("text");

                    b.Property<string>("deadheadmiles")
                        .HasColumnType("text");

                    b.Property<string>("driver")
                        .HasColumnType("text");

                    b.Property<string>("endcityst")
                        .HasColumnType("text");

                    b.Property<string>("enddate")
                        .HasColumnType("text");

                    b.Property<string>("endodometer")
                        .HasColumnType("text");

                    b.Property<string>("factory")
                        .HasColumnType("text");

                    b.Property<string>("factorydate")
                        .HasColumnType("text");

                    b.Property<string>("factorypaid")
                        .HasColumnType("text");

                    b.Property<string>("flatrate")
                        .HasColumnType("text");

                    b.Property<string>("iddriver")
                        .HasColumnType("text");

                    b.Property<string>("lastemptydate")
                        .HasColumnType("text");

                    b.Property<string>("lastemptyodometer")
                        .HasColumnType("text");

                    b.Property<string>("loaddate")
                        .HasColumnType("text");

                    b.Property<string>("loadid")
                        .HasColumnType("text");

                    b.Property<string>("loadmiles")
                        .HasColumnType("text");

                    b.Property<string>("loadodometer")
                        .HasColumnType("text");

                    b.Property<string>("loadstatus")
                        .HasColumnType("text");

                    b.Property<string>("loadtemp")
                        .HasColumnType("text");

                    b.Property<string>("loadtype")
                        .HasColumnType("text");

                    b.Property<string>("personalmiles")
                        .HasColumnType("text");

                    b.Property<string>("piececount")
                        .HasColumnType("text");

                    b.Property<string>("sealnumber")
                        .HasColumnType("text");

                    b.Property<string>("startcityst")
                        .HasColumnType("text");

                    b.Property<string>("statuspaid")
                        .HasColumnType("text");

                    b.Property<string>("totalmiles")
                        .HasColumnType("text");

                    b.Property<string>("totalotherpay")
                        .HasColumnType("text");

                    b.Property<string>("totalpaydue")
                        .HasColumnType("text");

                    b.Property<string>("totaltripbasic")
                        .HasColumnType("text");

                    b.Property<string>("totaltrippay")
                        .HasColumnType("text");

                    b.Property<string>("trailerid")
                        .HasColumnType("text");

                    b.Property<string>("truckid")
                        .HasColumnType("text");

                    b.Property<string>("weight")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("revenues");
                });

            modelBuilder.Entity("DataAccess.Models.TrailersProfile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("axels")
                        .HasColumnType("text");

                    b.Property<string>("color")
                        .HasColumnType("text");

                    b.Property<string>("licensedate")
                        .HasColumnType("text");

                    b.Property<string>("licensedateexpire")
                        .HasColumnType("text");

                    b.Property<string>("make")
                        .HasColumnType("text");

                    b.Property<string>("model")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<byte[]>("photo")
                        .HasColumnType("bytea");

                    b.Property<string>("pmmileage")
                        .HasColumnType("text");

                    b.Property<string>("tag")
                        .HasColumnType("text");

                    b.Property<string>("tiresize")
                        .HasColumnType("text");

                    b.Property<string>("totalmiles")
                        .HasColumnType("text");

                    b.Property<string>("trailernumber")
                        .HasColumnType("text");

                    b.Property<string>("vinnumber")
                        .HasColumnType("text");

                    b.Property<string>("year")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("trailersprofiles");
                });

            modelBuilder.Entity("DataAccess.Models.TrucksProfile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("axles")
                        .HasColumnType("text");

                    b.Property<string>("emptywgt")
                        .HasColumnType("text");

                    b.Property<string>("enginemake")
                        .HasColumnType("text");

                    b.Property<string>("enginepower")
                        .HasColumnType("text");

                    b.Property<string>("enginesn")
                        .HasColumnType("text");

                    b.Property<string>("fueltank")
                        .HasColumnType("text");

                    b.Property<string>("licensedate")
                        .HasColumnType("text");

                    b.Property<string>("licensedateexpire")
                        .HasColumnType("text");

                    b.Property<string>("make")
                        .HasColumnType("text");

                    b.Property<string>("model")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("ownername")
                        .HasColumnType("text");

                    b.Property<byte[]>("photo")
                        .HasColumnType("bytea");

                    b.Property<string>("pmmileage")
                        .HasColumnType("text");

                    b.Property<string>("tag")
                        .HasColumnType("text");

                    b.Property<string>("tiresize")
                        .HasColumnType("text");

                    b.Property<string>("totalmiles")
                        .HasColumnType("text");

                    b.Property<string>("transtype")
                        .HasColumnType("text");

                    b.Property<string>("truckcolor")
                        .HasColumnType("text");

                    b.Property<string>("trucknumber")
                        .HasColumnType("text");

                    b.Property<string>("vinnumber")
                        .HasColumnType("text");

                    b.Property<string>("year")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("trucksprofiles");
                });

            modelBuilder.Entity("DataAccess.Models.VendorCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("vendorcategories");
                });

            modelBuilder.Entity("DataAccess.Models.Vendors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("addres")
                        .HasColumnType("text");

                    b.Property<string>("addres2")
                        .HasColumnType("text");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("codezip")
                        .HasColumnType("text");

                    b.Property<string>("contact")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("faxnumber")
                        .HasColumnType("text");

                    b.Property<string>("lat")
                        .HasColumnType("text");

                    b.Property<string>("longt")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("phonenumber")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("taxid")
                        .HasColumnType("text");

                    b.Property<string>("venderidcode")
                        .HasColumnType("text");

                    b.Property<string>("website")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("vendors");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.AdminAcces", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("customer")
                        .HasColumnType("integer");

                    b.Property<int>("documents")
                        .HasColumnType("integer");

                    b.Property<int>("driverpay")
                        .HasColumnType("integer");

                    b.Property<int>("expense")
                        .HasColumnType("integer");

                    b.Property<int>("expensebyinvoice")
                        .HasColumnType("integer");

                    b.Property<int>("fuel")
                        .HasColumnType("integer");

                    b.Property<int>("idusers")
                        .HasColumnType("integer");

                    b.Property<int>("insurance")
                        .HasColumnType("integer");

                    b.Property<int>("invoicestatus")
                        .HasColumnType("integer");

                    b.Property<int>("load")
                        .HasColumnType("integer");

                    b.Property<int>("notes")
                        .HasColumnType("integer");

                    b.Property<int>("phonebook")
                        .HasColumnType("integer");

                    b.Property<int>("pickupdrop")
                        .HasColumnType("integer");

                    b.Property<int>("profitloss")
                        .HasColumnType("integer");

                    b.Property<int>("route")
                        .HasColumnType("integer");

                    b.Property<int>("tripplanner")
                        .HasColumnType("integer");

                    b.Property<int>("truckfleet")
                        .HasColumnType("integer");

                    b.Property<int>("utilities")
                        .HasColumnType("integer");

                    b.Property<int>("vendors")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("adminaccess");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.AdminMaintenance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("apu")
                        .HasColumnType("text");

                    b.Property<string>("apustop")
                        .HasColumnType("text");

                    b.Property<string>("trailerstoppm")
                        .HasColumnType("text");

                    b.Property<string>("trailerstoptipo2")
                        .HasColumnType("text");

                    b.Property<string>("trailerstoptipo3")
                        .HasColumnType("text");

                    b.Property<string>("trailertipo2")
                        .HasColumnType("text");

                    b.Property<string>("trailertipo3")
                        .HasColumnType("text");

                    b.Property<string>("trailertipopm")
                        .HasColumnType("text");

                    b.Property<string>("truckstoppm")
                        .HasColumnType("text");

                    b.Property<string>("truckstoptipo2")
                        .HasColumnType("text");

                    b.Property<string>("truckstoptipo3")
                        .HasColumnType("text");

                    b.Property<string>("trucktipo2")
                        .HasColumnType("text");

                    b.Property<string>("trucktipo3")
                        .HasColumnType("text");

                    b.Property<string>("trucktipopm")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("adminmaintenances");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.AdminSystem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("browsepref")
                        .HasColumnType("text");

                    b.Property<string>("dueinvoice")
                        .HasColumnType("text");

                    b.Property<string>("outinvoice")
                        .HasColumnType("text");

                    b.Property<string>("pastinvoice")
                        .HasColumnType("text");

                    b.Property<string>("rphotodoc")
                        .HasColumnType("text");

                    b.Property<string>("rprogram")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("adminsystems");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.AdminUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("codezip")
                        .HasColumnType("text");

                    b.Property<string>("dateend")
                        .HasColumnType("text");

                    b.Property<string>("datestart")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("nick")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<byte[]>("photo")
                        .HasColumnType("bytea");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("adminusers");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.Agents", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("agreementdate")
                        .HasColumnType("text");

                    b.Property<string>("banned")
                        .HasColumnType("text");

                    b.Property<string>("cargoamount")
                        .HasColumnType("text");

                    b.Property<string>("celphonenumber")
                        .HasColumnType("text");

                    b.Property<string>("department")
                        .HasColumnType("text");

                    b.Property<string>("detentionpay")
                        .HasColumnType("text");

                    b.Property<string>("dptcategory")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("expirationdate")
                        .HasColumnType("text");

                    b.Property<string>("extnumber")
                        .HasColumnType("text");

                    b.Property<string>("faxnumber")
                        .HasColumnType("text");

                    b.Property<string>("idclient")
                        .HasColumnType("text");

                    b.Property<string>("inactive")
                        .HasColumnType("text");

                    b.Property<string>("insuranceagency")
                        .HasColumnType("text");

                    b.Property<string>("liabilityamount")
                        .HasColumnType("text");

                    b.Property<string>("mcnumber")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("phonenumber")
                        .HasColumnType("text");

                    b.Property<string>("policynumber")
                        .HasColumnType("text");

                    b.Property<string>("startime")
                        .HasColumnType("text");

                    b.Property<string>("usddotnumber")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("agents");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.ApuProfiles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("apunumber")
                        .HasColumnType("text");

                    b.Property<string>("color")
                        .HasColumnType("text");

                    b.Property<string>("licensedate")
                        .HasColumnType("text");

                    b.Property<string>("licensedateexpire")
                        .HasColumnType("text");

                    b.Property<string>("make")
                        .HasColumnType("text");

                    b.Property<string>("model")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("owner")
                        .HasColumnType("text");

                    b.Property<byte[]>("photo")
                        .HasColumnType("bytea");

                    b.Property<string>("totalhours")
                        .HasColumnType("text");

                    b.Property<string>("vinnumber")
                        .HasColumnType("text");

                    b.Property<string>("year")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("apuprofiles");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.Broker", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("address2")
                        .HasColumnType("text");

                    b.Property<string>("cellphone")
                        .HasColumnType("text");

                    b.Property<string>("cellservice")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("codezip")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("emergencynumber")
                        .HasColumnType("text");

                    b.Property<string>("fax")
                        .HasColumnType("text");

                    b.Property<string>("mcnumber")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("phonelocal")
                        .HasColumnType("text");

                    b.Property<string>("phonetollfree")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("usddot")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("brokers");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.CompanyProfile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("address2")
                        .HasColumnType("text");

                    b.Property<string>("autohauler")
                        .HasColumnType("text");

                    b.Property<string>("billingemail")
                        .HasColumnType("text");

                    b.Property<string>("checkupdate")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<byte[]>("companylogo")
                        .HasColumnType("bytea");

                    b.Property<string>("contact")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("emailsignature")
                        .HasColumnType("text");

                    b.Property<string>("fax")
                        .HasColumnType("text");

                    b.Property<string>("fid")
                        .HasColumnType("text");

                    b.Property<string>("invoicemessage")
                        .HasColumnType("text");

                    b.Property<string>("mc")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("owner")
                        .HasColumnType("text");

                    b.Property<string>("paybyhours")
                        .HasColumnType("text");

                    b.Property<string>("paymethod")
                        .HasColumnType("text");

                    b.Property<string>("paypermileempty")
                        .HasColumnType("text");

                    b.Property<string>("paypermileload")
                        .HasColumnType("text");

                    b.Property<string>("percentagepay")
                        .HasColumnType("text");

                    b.Property<string>("percentagepayof")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.Property<string>("sendmailviaoutlook")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("tollfree")
                        .HasColumnType("text");

                    b.Property<string>("tonnagepay")
                        .HasColumnType("text");

                    b.Property<string>("usddot")
                        .HasColumnType("text");

                    b.Property<string>("uselogin")
                        .HasColumnType("text");

                    b.Property<string>("website")
                        .HasColumnType("text");

                    b.Property<string>("zip")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("companyprofiles");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.Descriptnotes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("idrevenue")
                        .HasColumnType("text");

                    b.Property<string>("payamount")
                        .HasColumnType("text");

                    b.Property<string>("paycategory")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("descriptnotes");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.Documents", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("document")
                        .HasColumnType("text");

                    b.Property<string>("idrevenue")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("documents");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.Driverprofile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("activedriver")
                        .HasColumnType("text");

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("assignedtruck")
                        .HasColumnType("text");

                    b.Property<string>("birthay")
                        .HasColumnType("text");

                    b.Property<string>("cdlclass")
                        .HasColumnType("text");

                    b.Property<string>("cdlendor")
                        .HasColumnType("text");

                    b.Property<string>("cdlexpirdate")
                        .HasColumnType("text");

                    b.Property<string>("cdlnumber")
                        .HasColumnType("text");

                    b.Property<byte[]>("cdlphoto")
                        .HasColumnType("bytea");

                    b.Property<string>("cdlstate")
                        .HasColumnType("text");

                    b.Property<string>("cellphone")
                        .HasColumnType("text");

                    b.Property<string>("cellservice")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("codezip")
                        .HasColumnType("text");

                    b.Property<string>("drivereld")
                        .HasColumnType("text");

                    b.Property<string>("driverexpense")
                        .HasColumnType("text");

                    b.Property<string>("driverezpass")
                        .HasColumnType("text");

                    b.Property<string>("driverfactoryfee")
                        .HasColumnType("text");

                    b.Property<string>("driverfuel")
                        .HasColumnType("text");

                    b.Property<string>("driverinsurace")
                        .HasColumnType("text");

                    b.Property<string>("driverpaymentfee")
                        .HasColumnType("text");

                    b.Property<byte[]>("driverphoto")
                        .HasColumnType("bytea");

                    b.Property<string>("driverprepass")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("emergaddress")
                        .HasColumnType("text");

                    b.Property<string>("emergcellphone")
                        .HasColumnType("text");

                    b.Property<string>("emergcity")
                        .HasColumnType("text");

                    b.Property<string>("emerghomephone")
                        .HasColumnType("text");

                    b.Property<string>("emergname")
                        .HasColumnType("text");

                    b.Property<string>("emergstate")
                        .HasColumnType("text");

                    b.Property<string>("emergzip")
                        .HasColumnType("text");

                    b.Property<string>("emptypaypermile")
                        .HasColumnType("text");

                    b.Property<string>("endservicedate")
                        .HasColumnType("text");

                    b.Property<string>("flatratepay")
                        .HasColumnType("text");

                    b.Property<string>("hiredate")
                        .HasColumnType("text");

                    b.Property<string>("homephone")
                        .HasColumnType("text");

                    b.Property<string>("lastname")
                        .HasColumnType("text");

                    b.Property<string>("loadedparpermile")
                        .HasColumnType("text");

                    b.Property<byte[]>("medcardphoto")
                        .HasColumnType("bytea");

                    b.Property<string>("medcareexpirdate")
                        .HasColumnType("text");

                    b.Property<string>("middlename")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("paybyhours")
                        .HasColumnType("text");

                    b.Property<string>("paymethod")
                        .HasColumnType("text");

                    b.Property<string>("percentagepay")
                        .HasColumnType("text");

                    b.Property<string>("percentof")
                        .HasColumnType("text");

                    b.Property<string>("pickupdroppay")
                        .HasColumnType("text");

                    b.Property<string>("ssnumber")
                        .HasColumnType("text");

                    b.Property<byte[]>("ssphoto")
                        .HasColumnType("bytea");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("statusdriver")
                        .HasColumnType("text");

                    b.Property<string>("tonnagepay")
                        .HasColumnType("text");

                    b.Property<string>("vacation")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("driverprofiles");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.EmailSetting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("clave")
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<string>("port")
                        .HasColumnType("text");

                    b.Property<string>("principal")
                        .HasColumnType("text");

                    b.Property<string>("smtp")
                        .HasColumnType("text");

                    b.Property<string>("ssl")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("emailsettings");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.EmployeeProfile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("birthay")
                        .HasColumnType("text");

                    b.Property<string>("cellphone")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("eaddress")
                        .HasColumnType("text");

                    b.Property<string>("ecellphone")
                        .HasColumnType("text");

                    b.Property<string>("ecity")
                        .HasColumnType("text");

                    b.Property<string>("ehomephone")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("emailsignature")
                        .HasColumnType("text");

                    b.Property<byte[]>("employeephoto")
                        .HasColumnType("bytea");

                    b.Property<string>("ename")
                        .HasColumnType("text");

                    b.Property<string>("endservicedate")
                        .HasColumnType("text");

                    b.Property<string>("estate")
                        .HasColumnType("text");

                    b.Property<string>("ezip")
                        .HasColumnType("text");

                    b.Property<string>("firstname")
                        .HasColumnType("text");

                    b.Property<string>("hiredate")
                        .HasColumnType("text");

                    b.Property<string>("homephone")
                        .HasColumnType("text");

                    b.Property<string>("lastname")
                        .HasColumnType("text");

                    b.Property<string>("middlename")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("ss")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("workfinal")
                        .HasColumnType("text");

                    b.Property<string>("zip")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("employeeprofile");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.Exresumen", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("expensecategory")
                        .HasColumnType("text");

                    b.Property<string>("idexpense")
                        .HasColumnType("text");

                    b.Property<string>("price")
                        .HasColumnType("text");

                    b.Property<string>("tripid")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("exresumens");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.FaxSetting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("servicecode")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("faxsetting");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.MaintenanceApu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("apu1")
                        .HasColumnType("text");

                    b.Property<string>("apu2")
                        .HasColumnType("text");

                    b.Property<string>("apu3")
                        .HasColumnType("text");

                    b.Property<string>("apu4")
                        .HasColumnType("text");

                    b.Property<string>("apu5")
                        .HasColumnType("text");

                    b.Property<string>("apu6")
                        .HasColumnType("text");

                    b.Property<string>("apu7")
                        .HasColumnType("text");

                    b.Property<string>("apuid")
                        .HasColumnType("text");

                    b.Property<string>("dateend")
                        .HasColumnType("text");

                    b.Property<string>("dateinitial")
                        .HasColumnType("text");

                    b.Property<string>("drivername")
                        .HasColumnType("text");

                    b.Property<string>("expense")
                        .HasColumnType("text");

                    b.Property<string>("hourstotal")
                        .HasColumnType("text");

                    b.Property<string>("incidense")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("maintenanceapus");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.MaintenanceSummer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateend")
                        .HasColumnType("text");

                    b.Property<string>("dateinitial")
                        .HasColumnType("text");

                    b.Property<string>("drivername")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("sm1")
                        .HasColumnType("text");

                    b.Property<string>("sm10")
                        .HasColumnType("text");

                    b.Property<string>("sm11")
                        .HasColumnType("text");

                    b.Property<string>("sm12")
                        .HasColumnType("text");

                    b.Property<string>("sm13")
                        .HasColumnType("text");

                    b.Property<string>("sm14")
                        .HasColumnType("text");

                    b.Property<string>("sm2")
                        .HasColumnType("text");

                    b.Property<string>("sm3")
                        .HasColumnType("text");

                    b.Property<string>("sm4")
                        .HasColumnType("text");

                    b.Property<string>("sm5")
                        .HasColumnType("text");

                    b.Property<string>("sm6")
                        .HasColumnType("text");

                    b.Property<string>("sm7")
                        .HasColumnType("text");

                    b.Property<string>("sm8")
                        .HasColumnType("text");

                    b.Property<string>("sm9")
                        .HasColumnType("text");

                    b.Property<string>("truckid")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("maintenancesummers");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.MaintenanceTrailer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateend")
                        .HasColumnType("text");

                    b.Property<string>("dateinitial")
                        .HasColumnType("text");

                    b.Property<string>("drivername")
                        .HasColumnType("text");

                    b.Property<string>("innr1")
                        .HasColumnType("text");

                    b.Property<string>("innr10")
                        .HasColumnType("text");

                    b.Property<string>("innr11")
                        .HasColumnType("text");

                    b.Property<string>("innr12")
                        .HasColumnType("text");

                    b.Property<string>("innr13")
                        .HasColumnType("text");

                    b.Property<string>("innr14")
                        .HasColumnType("text");

                    b.Property<string>("innr15")
                        .HasColumnType("text");

                    b.Property<string>("innr16")
                        .HasColumnType("text");

                    b.Property<string>("innr17")
                        .HasColumnType("text");

                    b.Property<string>("innr18")
                        .HasColumnType("text");

                    b.Property<string>("innr19")
                        .HasColumnType("text");

                    b.Property<string>("innr2")
                        .HasColumnType("text");

                    b.Property<string>("innr20")
                        .HasColumnType("text");

                    b.Property<string>("innr21")
                        .HasColumnType("text");

                    b.Property<string>("innr22")
                        .HasColumnType("text");

                    b.Property<string>("innr23")
                        .HasColumnType("text");

                    b.Property<string>("innr24")
                        .HasColumnType("text");

                    b.Property<string>("innr25")
                        .HasColumnType("text");

                    b.Property<string>("innr26")
                        .HasColumnType("text");

                    b.Property<string>("innr27")
                        .HasColumnType("text");

                    b.Property<string>("innr28")
                        .HasColumnType("text");

                    b.Property<string>("innr29")
                        .HasColumnType("text");

                    b.Property<string>("innr3")
                        .HasColumnType("text");

                    b.Property<string>("innr30")
                        .HasColumnType("text");

                    b.Property<string>("innr31")
                        .HasColumnType("text");

                    b.Property<string>("innr32")
                        .HasColumnType("text");

                    b.Property<string>("innr33")
                        .HasColumnType("text");

                    b.Property<string>("innr34")
                        .HasColumnType("text");

                    b.Property<string>("innr35")
                        .HasColumnType("text");

                    b.Property<string>("innr36")
                        .HasColumnType("text");

                    b.Property<string>("innr37")
                        .HasColumnType("text");

                    b.Property<string>("innr38")
                        .HasColumnType("text");

                    b.Property<string>("innr4")
                        .HasColumnType("text");

                    b.Property<string>("innr5")
                        .HasColumnType("text");

                    b.Property<string>("innr6")
                        .HasColumnType("text");

                    b.Property<string>("innr7")
                        .HasColumnType("text");

                    b.Property<string>("innr8")
                        .HasColumnType("text");

                    b.Property<string>("innr9")
                        .HasColumnType("text");

                    b.Property<string>("inok1")
                        .HasColumnType("text");

                    b.Property<string>("inok10")
                        .HasColumnType("text");

                    b.Property<string>("inok11")
                        .HasColumnType("text");

                    b.Property<string>("inok12")
                        .HasColumnType("text");

                    b.Property<string>("inok13")
                        .HasColumnType("text");

                    b.Property<string>("inok14")
                        .HasColumnType("text");

                    b.Property<string>("inok15")
                        .HasColumnType("text");

                    b.Property<string>("inok16")
                        .HasColumnType("text");

                    b.Property<string>("inok17")
                        .HasColumnType("text");

                    b.Property<string>("inok18")
                        .HasColumnType("text");

                    b.Property<string>("inok19")
                        .HasColumnType("text");

                    b.Property<string>("inok2")
                        .HasColumnType("text");

                    b.Property<string>("inok20")
                        .HasColumnType("text");

                    b.Property<string>("inok21")
                        .HasColumnType("text");

                    b.Property<string>("inok22")
                        .HasColumnType("text");

                    b.Property<string>("inok23")
                        .HasColumnType("text");

                    b.Property<string>("inok24")
                        .HasColumnType("text");

                    b.Property<string>("inok25")
                        .HasColumnType("text");

                    b.Property<string>("inok26")
                        .HasColumnType("text");

                    b.Property<string>("inok27")
                        .HasColumnType("text");

                    b.Property<string>("inok28")
                        .HasColumnType("text");

                    b.Property<string>("inok29")
                        .HasColumnType("text");

                    b.Property<string>("inok3")
                        .HasColumnType("text");

                    b.Property<string>("inok30")
                        .HasColumnType("text");

                    b.Property<string>("inok31")
                        .HasColumnType("text");

                    b.Property<string>("inok32")
                        .HasColumnType("text");

                    b.Property<string>("inok33")
                        .HasColumnType("text");

                    b.Property<string>("inok34")
                        .HasColumnType("text");

                    b.Property<string>("inok35")
                        .HasColumnType("text");

                    b.Property<string>("inok36")
                        .HasColumnType("text");

                    b.Property<string>("inok37")
                        .HasColumnType("text");

                    b.Property<string>("inok38")
                        .HasColumnType("text");

                    b.Property<string>("inok4")
                        .HasColumnType("text");

                    b.Property<string>("inok5")
                        .HasColumnType("text");

                    b.Property<string>("inok6")
                        .HasColumnType("text");

                    b.Property<string>("inok7")
                        .HasColumnType("text");

                    b.Property<string>("inok8")
                        .HasColumnType("text");

                    b.Property<string>("inok9")
                        .HasColumnType("text");

                    b.Property<string>("milestotal")
                        .HasColumnType("text");

                    b.Property<string>("outnr1")
                        .HasColumnType("text");

                    b.Property<string>("outnr10")
                        .HasColumnType("text");

                    b.Property<string>("outnr11")
                        .HasColumnType("text");

                    b.Property<string>("outnr12")
                        .HasColumnType("text");

                    b.Property<string>("outnr13")
                        .HasColumnType("text");

                    b.Property<string>("outnr14")
                        .HasColumnType("text");

                    b.Property<string>("outnr15")
                        .HasColumnType("text");

                    b.Property<string>("outnr16")
                        .HasColumnType("text");

                    b.Property<string>("outnr17")
                        .HasColumnType("text");

                    b.Property<string>("outnr18")
                        .HasColumnType("text");

                    b.Property<string>("outnr19")
                        .HasColumnType("text");

                    b.Property<string>("outnr2")
                        .HasColumnType("text");

                    b.Property<string>("outnr20")
                        .HasColumnType("text");

                    b.Property<string>("outnr21")
                        .HasColumnType("text");

                    b.Property<string>("outnr22")
                        .HasColumnType("text");

                    b.Property<string>("outnr23")
                        .HasColumnType("text");

                    b.Property<string>("outnr24")
                        .HasColumnType("text");

                    b.Property<string>("outnr25")
                        .HasColumnType("text");

                    b.Property<string>("outnr26")
                        .HasColumnType("text");

                    b.Property<string>("outnr27")
                        .HasColumnType("text");

                    b.Property<string>("outnr28")
                        .HasColumnType("text");

                    b.Property<string>("outnr29")
                        .HasColumnType("text");

                    b.Property<string>("outnr3")
                        .HasColumnType("text");

                    b.Property<string>("outnr30")
                        .HasColumnType("text");

                    b.Property<string>("outnr31")
                        .HasColumnType("text");

                    b.Property<string>("outnr32")
                        .HasColumnType("text");

                    b.Property<string>("outnr33")
                        .HasColumnType("text");

                    b.Property<string>("outnr34")
                        .HasColumnType("text");

                    b.Property<string>("outnr35")
                        .HasColumnType("text");

                    b.Property<string>("outnr36")
                        .HasColumnType("text");

                    b.Property<string>("outnr37")
                        .HasColumnType("text");

                    b.Property<string>("outnr38")
                        .HasColumnType("text");

                    b.Property<string>("outnr4")
                        .HasColumnType("text");

                    b.Property<string>("outnr5")
                        .HasColumnType("text");

                    b.Property<string>("outnr6")
                        .HasColumnType("text");

                    b.Property<string>("outnr7")
                        .HasColumnType("text");

                    b.Property<string>("outnr8")
                        .HasColumnType("text");

                    b.Property<string>("outnr9")
                        .HasColumnType("text");

                    b.Property<string>("outok1")
                        .HasColumnType("text");

                    b.Property<string>("outok10")
                        .HasColumnType("text");

                    b.Property<string>("outok11")
                        .HasColumnType("text");

                    b.Property<string>("outok12")
                        .HasColumnType("text");

                    b.Property<string>("outok13")
                        .HasColumnType("text");

                    b.Property<string>("outok14")
                        .HasColumnType("text");

                    b.Property<string>("outok15")
                        .HasColumnType("text");

                    b.Property<string>("outok16")
                        .HasColumnType("text");

                    b.Property<string>("outok17")
                        .HasColumnType("text");

                    b.Property<string>("outok18")
                        .HasColumnType("text");

                    b.Property<string>("outok19")
                        .HasColumnType("text");

                    b.Property<string>("outok2")
                        .HasColumnType("text");

                    b.Property<string>("outok20")
                        .HasColumnType("text");

                    b.Property<string>("outok21")
                        .HasColumnType("text");

                    b.Property<string>("outok22")
                        .HasColumnType("text");

                    b.Property<string>("outok23")
                        .HasColumnType("text");

                    b.Property<string>("outok24")
                        .HasColumnType("text");

                    b.Property<string>("outok25")
                        .HasColumnType("text");

                    b.Property<string>("outok26")
                        .HasColumnType("text");

                    b.Property<string>("outok27")
                        .HasColumnType("text");

                    b.Property<string>("outok28")
                        .HasColumnType("text");

                    b.Property<string>("outok29")
                        .HasColumnType("text");

                    b.Property<string>("outok3")
                        .HasColumnType("text");

                    b.Property<string>("outok30")
                        .HasColumnType("text");

                    b.Property<string>("outok31")
                        .HasColumnType("text");

                    b.Property<string>("outok32")
                        .HasColumnType("text");

                    b.Property<string>("outok33")
                        .HasColumnType("text");

                    b.Property<string>("outok34")
                        .HasColumnType("text");

                    b.Property<string>("outok35")
                        .HasColumnType("text");

                    b.Property<string>("outok36")
                        .HasColumnType("text");

                    b.Property<string>("outok37")
                        .HasColumnType("text");

                    b.Property<string>("outok38")
                        .HasColumnType("text");

                    b.Property<string>("outok4")
                        .HasColumnType("text");

                    b.Property<string>("outok5")
                        .HasColumnType("text");

                    b.Property<string>("outok6")
                        .HasColumnType("text");

                    b.Property<string>("outok7")
                        .HasColumnType("text");

                    b.Property<string>("outok8")
                        .HasColumnType("text");

                    b.Property<string>("outok9")
                        .HasColumnType("text");

                    b.Property<string>("trailerid")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("maintenancetrailers");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.MaintenanceTruckPM", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateend")
                        .HasColumnType("text");

                    b.Property<string>("dateinitial")
                        .HasColumnType("text");

                    b.Property<string>("drivername")
                        .HasColumnType("text");

                    b.Property<string>("expense")
                        .HasColumnType("text");

                    b.Property<string>("incidense")
                        .HasColumnType("text");

                    b.Property<string>("milestotal")
                        .HasColumnType("text");

                    b.Property<string>("pm1")
                        .HasColumnType("text");

                    b.Property<string>("pm10")
                        .HasColumnType("text");

                    b.Property<string>("pm11")
                        .HasColumnType("text");

                    b.Property<string>("pm12")
                        .HasColumnType("text");

                    b.Property<string>("pm13")
                        .HasColumnType("text");

                    b.Property<string>("pm14")
                        .HasColumnType("text");

                    b.Property<string>("pm15")
                        .HasColumnType("text");

                    b.Property<string>("pm16")
                        .HasColumnType("text");

                    b.Property<string>("pm17")
                        .HasColumnType("text");

                    b.Property<string>("pm18")
                        .HasColumnType("text");

                    b.Property<string>("pm19")
                        .HasColumnType("text");

                    b.Property<string>("pm2")
                        .HasColumnType("text");

                    b.Property<string>("pm20")
                        .HasColumnType("text");

                    b.Property<string>("pm21")
                        .HasColumnType("text");

                    b.Property<string>("pm22")
                        .HasColumnType("text");

                    b.Property<string>("pm3")
                        .HasColumnType("text");

                    b.Property<string>("pm4")
                        .HasColumnType("text");

                    b.Property<string>("pm5")
                        .HasColumnType("text");

                    b.Property<string>("pm6")
                        .HasColumnType("text");

                    b.Property<string>("pm7")
                        .HasColumnType("text");

                    b.Property<string>("pm8")
                        .HasColumnType("text");

                    b.Property<string>("pm9")
                        .HasColumnType("text");

                    b.Property<string>("truckid")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("maintenancetruckpms");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.MaintenanceTruckTipoII", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateend")
                        .HasColumnType("text");

                    b.Property<string>("dateinitial")
                        .HasColumnType("text");

                    b.Property<string>("drivername")
                        .HasColumnType("text");

                    b.Property<string>("milestotal")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("pot1")
                        .HasColumnType("text");

                    b.Property<string>("pot10")
                        .HasColumnType("text");

                    b.Property<string>("pot11")
                        .HasColumnType("text");

                    b.Property<string>("pot12")
                        .HasColumnType("text");

                    b.Property<string>("pot13")
                        .HasColumnType("text");

                    b.Property<string>("pot14")
                        .HasColumnType("text");

                    b.Property<string>("pot15")
                        .HasColumnType("text");

                    b.Property<string>("pot16")
                        .HasColumnType("text");

                    b.Property<string>("pot17")
                        .HasColumnType("text");

                    b.Property<string>("pot18")
                        .HasColumnType("text");

                    b.Property<string>("pot19")
                        .HasColumnType("text");

                    b.Property<string>("pot2")
                        .HasColumnType("text");

                    b.Property<string>("pot20")
                        .HasColumnType("text");

                    b.Property<string>("pot21")
                        .HasColumnType("text");

                    b.Property<string>("pot22")
                        .HasColumnType("text");

                    b.Property<string>("pot23")
                        .HasColumnType("text");

                    b.Property<string>("pot24")
                        .HasColumnType("text");

                    b.Property<string>("pot25")
                        .HasColumnType("text");

                    b.Property<string>("pot26")
                        .HasColumnType("text");

                    b.Property<string>("pot27")
                        .HasColumnType("text");

                    b.Property<string>("pot28")
                        .HasColumnType("text");

                    b.Property<string>("pot29")
                        .HasColumnType("text");

                    b.Property<string>("pot3")
                        .HasColumnType("text");

                    b.Property<string>("pot30")
                        .HasColumnType("text");

                    b.Property<string>("pot31")
                        .HasColumnType("text");

                    b.Property<string>("pot32")
                        .HasColumnType("text");

                    b.Property<string>("pot33")
                        .HasColumnType("text");

                    b.Property<string>("pot34")
                        .HasColumnType("text");

                    b.Property<string>("pot35")
                        .HasColumnType("text");

                    b.Property<string>("pot36")
                        .HasColumnType("text");

                    b.Property<string>("pot37")
                        .HasColumnType("text");

                    b.Property<string>("pot38")
                        .HasColumnType("text");

                    b.Property<string>("pot39")
                        .HasColumnType("text");

                    b.Property<string>("pot4")
                        .HasColumnType("text");

                    b.Property<string>("pot40")
                        .HasColumnType("text");

                    b.Property<string>("pot41")
                        .HasColumnType("text");

                    b.Property<string>("pot42")
                        .HasColumnType("text");

                    b.Property<string>("pot43")
                        .HasColumnType("text");

                    b.Property<string>("pot44")
                        .HasColumnType("text");

                    b.Property<string>("pot45")
                        .HasColumnType("text");

                    b.Property<string>("pot46")
                        .HasColumnType("text");

                    b.Property<string>("pot47")
                        .HasColumnType("text");

                    b.Property<string>("pot48")
                        .HasColumnType("text");

                    b.Property<string>("pot49")
                        .HasColumnType("text");

                    b.Property<string>("pot5")
                        .HasColumnType("text");

                    b.Property<string>("pot50")
                        .HasColumnType("text");

                    b.Property<string>("pot51")
                        .HasColumnType("text");

                    b.Property<string>("pot52")
                        .HasColumnType("text");

                    b.Property<string>("pot53")
                        .HasColumnType("text");

                    b.Property<string>("pot54")
                        .HasColumnType("text");

                    b.Property<string>("pot55")
                        .HasColumnType("text");

                    b.Property<string>("pot56")
                        .HasColumnType("text");

                    b.Property<string>("pot57")
                        .HasColumnType("text");

                    b.Property<string>("pot58")
                        .HasColumnType("text");

                    b.Property<string>("pot59")
                        .HasColumnType("text");

                    b.Property<string>("pot6")
                        .HasColumnType("text");

                    b.Property<string>("pot60")
                        .HasColumnType("text");

                    b.Property<string>("pot61")
                        .HasColumnType("text");

                    b.Property<string>("pot62")
                        .HasColumnType("text");

                    b.Property<string>("pot63")
                        .HasColumnType("text");

                    b.Property<string>("pot64")
                        .HasColumnType("text");

                    b.Property<string>("pot7")
                        .HasColumnType("text");

                    b.Property<string>("pot8")
                        .HasColumnType("text");

                    b.Property<string>("pot9")
                        .HasColumnType("text");

                    b.Property<string>("prt1")
                        .HasColumnType("text");

                    b.Property<string>("prt10")
                        .HasColumnType("text");

                    b.Property<string>("prt11")
                        .HasColumnType("text");

                    b.Property<string>("prt12")
                        .HasColumnType("text");

                    b.Property<string>("prt13")
                        .HasColumnType("text");

                    b.Property<string>("prt14")
                        .HasColumnType("text");

                    b.Property<string>("prt15")
                        .HasColumnType("text");

                    b.Property<string>("prt16")
                        .HasColumnType("text");

                    b.Property<string>("prt17")
                        .HasColumnType("text");

                    b.Property<string>("prt18")
                        .HasColumnType("text");

                    b.Property<string>("prt19")
                        .HasColumnType("text");

                    b.Property<string>("prt2")
                        .HasColumnType("text");

                    b.Property<string>("prt20")
                        .HasColumnType("text");

                    b.Property<string>("prt21")
                        .HasColumnType("text");

                    b.Property<string>("prt22")
                        .HasColumnType("text");

                    b.Property<string>("prt23")
                        .HasColumnType("text");

                    b.Property<string>("prt24")
                        .HasColumnType("text");

                    b.Property<string>("prt25")
                        .HasColumnType("text");

                    b.Property<string>("prt26")
                        .HasColumnType("text");

                    b.Property<string>("prt27")
                        .HasColumnType("text");

                    b.Property<string>("prt28")
                        .HasColumnType("text");

                    b.Property<string>("prt29")
                        .HasColumnType("text");

                    b.Property<string>("prt3")
                        .HasColumnType("text");

                    b.Property<string>("prt30")
                        .HasColumnType("text");

                    b.Property<string>("prt31")
                        .HasColumnType("text");

                    b.Property<string>("prt32")
                        .HasColumnType("text");

                    b.Property<string>("prt33")
                        .HasColumnType("text");

                    b.Property<string>("prt34")
                        .HasColumnType("text");

                    b.Property<string>("prt35")
                        .HasColumnType("text");

                    b.Property<string>("prt36")
                        .HasColumnType("text");

                    b.Property<string>("prt37")
                        .HasColumnType("text");

                    b.Property<string>("prt38")
                        .HasColumnType("text");

                    b.Property<string>("prt39")
                        .HasColumnType("text");

                    b.Property<string>("prt4")
                        .HasColumnType("text");

                    b.Property<string>("prt40")
                        .HasColumnType("text");

                    b.Property<string>("prt41")
                        .HasColumnType("text");

                    b.Property<string>("prt42")
                        .HasColumnType("text");

                    b.Property<string>("prt43")
                        .HasColumnType("text");

                    b.Property<string>("prt44")
                        .HasColumnType("text");

                    b.Property<string>("prt45")
                        .HasColumnType("text");

                    b.Property<string>("prt46")
                        .HasColumnType("text");

                    b.Property<string>("prt47")
                        .HasColumnType("text");

                    b.Property<string>("prt48")
                        .HasColumnType("text");

                    b.Property<string>("prt49")
                        .HasColumnType("text");

                    b.Property<string>("prt5")
                        .HasColumnType("text");

                    b.Property<string>("prt50")
                        .HasColumnType("text");

                    b.Property<string>("prt51")
                        .HasColumnType("text");

                    b.Property<string>("prt52")
                        .HasColumnType("text");

                    b.Property<string>("prt53")
                        .HasColumnType("text");

                    b.Property<string>("prt54")
                        .HasColumnType("text");

                    b.Property<string>("prt55")
                        .HasColumnType("text");

                    b.Property<string>("prt56")
                        .HasColumnType("text");

                    b.Property<string>("prt57")
                        .HasColumnType("text");

                    b.Property<string>("prt58")
                        .HasColumnType("text");

                    b.Property<string>("prt59")
                        .HasColumnType("text");

                    b.Property<string>("prt6")
                        .HasColumnType("text");

                    b.Property<string>("prt60")
                        .HasColumnType("text");

                    b.Property<string>("prt61")
                        .HasColumnType("text");

                    b.Property<string>("prt62")
                        .HasColumnType("text");

                    b.Property<string>("prt63")
                        .HasColumnType("text");

                    b.Property<string>("prt64")
                        .HasColumnType("text");

                    b.Property<string>("prt7")
                        .HasColumnType("text");

                    b.Property<string>("prt8")
                        .HasColumnType("text");

                    b.Property<string>("prt9")
                        .HasColumnType("text");

                    b.Property<string>("rr1")
                        .HasColumnType("text");

                    b.Property<string>("rr10")
                        .HasColumnType("text");

                    b.Property<string>("rr11")
                        .HasColumnType("text");

                    b.Property<string>("rr12")
                        .HasColumnType("text");

                    b.Property<string>("rr13")
                        .HasColumnType("text");

                    b.Property<string>("rr14")
                        .HasColumnType("text");

                    b.Property<string>("rr15")
                        .HasColumnType("text");

                    b.Property<string>("rr16")
                        .HasColumnType("text");

                    b.Property<string>("rr17")
                        .HasColumnType("text");

                    b.Property<string>("rr18")
                        .HasColumnType("text");

                    b.Property<string>("rr19")
                        .HasColumnType("text");

                    b.Property<string>("rr2")
                        .HasColumnType("text");

                    b.Property<string>("rr20")
                        .HasColumnType("text");

                    b.Property<string>("rr21")
                        .HasColumnType("text");

                    b.Property<string>("rr22")
                        .HasColumnType("text");

                    b.Property<string>("rr23")
                        .HasColumnType("text");

                    b.Property<string>("rr24")
                        .HasColumnType("text");

                    b.Property<string>("rr25")
                        .HasColumnType("text");

                    b.Property<string>("rr26")
                        .HasColumnType("text");

                    b.Property<string>("rr27")
                        .HasColumnType("text");

                    b.Property<string>("rr28")
                        .HasColumnType("text");

                    b.Property<string>("rr29")
                        .HasColumnType("text");

                    b.Property<string>("rr3")
                        .HasColumnType("text");

                    b.Property<string>("rr30")
                        .HasColumnType("text");

                    b.Property<string>("rr31")
                        .HasColumnType("text");

                    b.Property<string>("rr32")
                        .HasColumnType("text");

                    b.Property<string>("rr33")
                        .HasColumnType("text");

                    b.Property<string>("rr34")
                        .HasColumnType("text");

                    b.Property<string>("rr35")
                        .HasColumnType("text");

                    b.Property<string>("rr36")
                        .HasColumnType("text");

                    b.Property<string>("rr37")
                        .HasColumnType("text");

                    b.Property<string>("rr38")
                        .HasColumnType("text");

                    b.Property<string>("rr39")
                        .HasColumnType("text");

                    b.Property<string>("rr4")
                        .HasColumnType("text");

                    b.Property<string>("rr40")
                        .HasColumnType("text");

                    b.Property<string>("rr41")
                        .HasColumnType("text");

                    b.Property<string>("rr42")
                        .HasColumnType("text");

                    b.Property<string>("rr43")
                        .HasColumnType("text");

                    b.Property<string>("rr44")
                        .HasColumnType("text");

                    b.Property<string>("rr45")
                        .HasColumnType("text");

                    b.Property<string>("rr46")
                        .HasColumnType("text");

                    b.Property<string>("rr47")
                        .HasColumnType("text");

                    b.Property<string>("rr48")
                        .HasColumnType("text");

                    b.Property<string>("rr49")
                        .HasColumnType("text");

                    b.Property<string>("rr5")
                        .HasColumnType("text");

                    b.Property<string>("rr50")
                        .HasColumnType("text");

                    b.Property<string>("rr51")
                        .HasColumnType("text");

                    b.Property<string>("rr52")
                        .HasColumnType("text");

                    b.Property<string>("rr53")
                        .HasColumnType("text");

                    b.Property<string>("rr54")
                        .HasColumnType("text");

                    b.Property<string>("rr55")
                        .HasColumnType("text");

                    b.Property<string>("rr56")
                        .HasColumnType("text");

                    b.Property<string>("rr57")
                        .HasColumnType("text");

                    b.Property<string>("rr58")
                        .HasColumnType("text");

                    b.Property<string>("rr59")
                        .HasColumnType("text");

                    b.Property<string>("rr6")
                        .HasColumnType("text");

                    b.Property<string>("rr60")
                        .HasColumnType("text");

                    b.Property<string>("rr61")
                        .HasColumnType("text");

                    b.Property<string>("rr62")
                        .HasColumnType("text");

                    b.Property<string>("rr63")
                        .HasColumnType("text");

                    b.Property<string>("rr64")
                        .HasColumnType("text");

                    b.Property<string>("rr7")
                        .HasColumnType("text");

                    b.Property<string>("rr8")
                        .HasColumnType("text");

                    b.Property<string>("rr9")
                        .HasColumnType("text");

                    b.Property<string>("truckid")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("maintenancetrucktipo2s");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.MaintenanceTruckTipoIII", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateend")
                        .HasColumnType("text");

                    b.Property<string>("dateinitial")
                        .HasColumnType("text");

                    b.Property<string>("drivername")
                        .HasColumnType("text");

                    b.Property<string>("expense")
                        .HasColumnType("text");

                    b.Property<string>("incidense")
                        .HasColumnType("text");

                    b.Property<string>("milestotal")
                        .HasColumnType("text");

                    b.Property<string>("t3p1")
                        .HasColumnType("text");

                    b.Property<string>("t3p2")
                        .HasColumnType("text");

                    b.Property<string>("t3p3")
                        .HasColumnType("text");

                    b.Property<string>("t3p4")
                        .HasColumnType("text");

                    b.Property<string>("t3p5")
                        .HasColumnType("text");

                    b.Property<string>("t3p6")
                        .HasColumnType("text");

                    b.Property<string>("t3p7")
                        .HasColumnType("text");

                    b.Property<string>("truckid")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("maintenancetrucktipo3s");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.MaintenanceWinter", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateend")
                        .HasColumnType("text");

                    b.Property<string>("dateinitial")
                        .HasColumnType("text");

                    b.Property<string>("drivername")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("truckid")
                        .HasColumnType("text");

                    b.Property<string>("wt1")
                        .HasColumnType("text");

                    b.Property<string>("wt10")
                        .HasColumnType("text");

                    b.Property<string>("wt11")
                        .HasColumnType("text");

                    b.Property<string>("wt12")
                        .HasColumnType("text");

                    b.Property<string>("wt13")
                        .HasColumnType("text");

                    b.Property<string>("wt14")
                        .HasColumnType("text");

                    b.Property<string>("wt15")
                        .HasColumnType("text");

                    b.Property<string>("wt16")
                        .HasColumnType("text");

                    b.Property<string>("wt17")
                        .HasColumnType("text");

                    b.Property<string>("wt18")
                        .HasColumnType("text");

                    b.Property<string>("wt19")
                        .HasColumnType("text");

                    b.Property<string>("wt2")
                        .HasColumnType("text");

                    b.Property<string>("wt3")
                        .HasColumnType("text");

                    b.Property<string>("wt4")
                        .HasColumnType("text");

                    b.Property<string>("wt5")
                        .HasColumnType("text");

                    b.Property<string>("wt6")
                        .HasColumnType("text");

                    b.Property<string>("wt7")
                        .HasColumnType("text");

                    b.Property<string>("wt8")
                        .HasColumnType("text");

                    b.Property<string>("wt9")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("maintenancewinters");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.PayCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ammount")
                        .HasColumnType("text");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("idrevenue")
                        .HasColumnType("text");

                    b.Property<string>("loadstatus")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("paycategories");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.PickupDropType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("pickupdroptypes");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.RVDriverPay", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("bonus")
                        .HasColumnType("text");

                    b.Property<string>("driverstatus")
                        .HasColumnType("text");

                    b.Property<string>("eld")
                        .HasColumnType("text");

                    b.Property<string>("emptypay")
                        .HasColumnType("text");

                    b.Property<string>("expense")
                        .HasColumnType("text");

                    b.Property<string>("ezpass")
                        .HasColumnType("text");

                    b.Property<string>("factoryfee")
                        .HasColumnType("text");

                    b.Property<string>("flatrate")
                        .HasColumnType("text");

                    b.Property<string>("fuel")
                        .HasColumnType("text");

                    b.Property<string>("idrevenue")
                        .HasColumnType("text");

                    b.Property<string>("insurance")
                        .HasColumnType("text");

                    b.Property<string>("loadpay")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("other")
                        .HasColumnType("text");

                    b.Property<string>("paybyhours")
                        .HasColumnType("text");

                    b.Property<string>("paymentfee")
                        .HasColumnType("text");

                    b.Property<string>("percentage")
                        .HasColumnType("text");

                    b.Property<string>("pickupdrop")
                        .HasColumnType("text");

                    b.Property<string>("pp")
                        .HasColumnType("text");

                    b.Property<string>("tonnage")
                        .HasColumnType("text");

                    b.Property<string>("vacation")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("rvdriverpays");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.RVRoute", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("endodom")
                        .HasColumnType("text");

                    b.Property<string>("gallons")
                        .HasColumnType("text");

                    b.Property<string>("highways")
                        .HasColumnType("text");

                    b.Property<string>("idrevenue")
                        .HasColumnType("text");

                    b.Property<string>("miles")
                        .HasColumnType("text");

                    b.Property<string>("startodom")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("tollmiles")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("rvroutes");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.SRCalls", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("callcustomer")
                        .HasColumnType("text");

                    b.Property<string>("calldate")
                        .HasColumnType("text");

                    b.Property<string>("callnotes")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("srcalls");
                });
#pragma warning restore 612, 618
        }
    }
}
