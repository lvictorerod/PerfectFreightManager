// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Perfect_Freight_Manager.Models;

namespace Perfect_Freight_Manager.Migrations
{
    [DbContext(typeof(AplicationContext))]
    [Migration("20200506204002_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DataAccess.Models.CityState", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CtyState")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("citystates");
                });

            modelBuilder.Entity("DataAccess.Models.Clients", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("BillingEmailAddress")
                        .HasColumnType("text");

                    b.Property<string>("BillingFaxNumber")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CodeZip")
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("MainPhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("OfficeDayHours")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("DataAccess.Models.CodeZIp", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AreaCode")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("County")
                        .HasColumnType("text");

                    b.Property<string>("Lat")
                        .HasColumnType("text");

                    b.Property<string>("Long")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("codezips");
                });

            modelBuilder.Entity("DataAccess.Models.ContactClients", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AgreementDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Banned")
                        .HasColumnType("integer");

                    b.Property<string>("CargoAmount")
                        .HasColumnType("text");

                    b.Property<string>("CellPhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("DetentionPay")
                        .HasColumnType("text");

                    b.Property<string>("DptCategory")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExtNumber")
                        .HasColumnType("text");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("text");

                    b.Property<int>("Inactive")
                        .HasColumnType("integer");

                    b.Property<int>("InsuranceAgency")
                        .HasColumnType("integer");

                    b.Property<string>("LiabilityAmount")
                        .HasColumnType("text");

                    b.Property<int>("MCNumber")
                        .HasColumnType("integer");

                    b.Property<string>("MyProperty")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("PolicyNumber")
                        .HasColumnType("text");

                    b.Property<int>("StarTime")
                        .HasColumnType("integer");

                    b.Property<int>("USDDOTNumber")
                        .HasColumnType("integer");

                    b.Property<int>("idClient")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("contactclients");
                });

            modelBuilder.Entity("DataAccess.Models.DriverProfile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("AssignedTruck")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Birthay")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CDLClass")
                        .HasColumnType("text");

                    b.Property<string>("CDLEndor")
                        .HasColumnType("text");

                    b.Property<DateTime>("CDLExpirDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CDLNumber")
                        .HasColumnType("integer");

                    b.Property<byte>("CDLPhoto")
                        .HasColumnType("smallint");

                    b.Property<string>("CDLState")
                        .HasColumnType("text");

                    b.Property<string>("CellPhone")
                        .HasColumnType("text");

                    b.Property<string>("CellService")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CodeZip")
                        .HasColumnType("text");

                    b.Property<byte>("DriverPhoto")
                        .HasColumnType("smallint");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("EmergAddress")
                        .HasColumnType("text");

                    b.Property<string>("EmergCellPhone")
                        .HasColumnType("text");

                    b.Property<string>("EmergCity")
                        .HasColumnType("text");

                    b.Property<string>("EmergHomePhone")
                        .HasColumnType("text");

                    b.Property<string>("EmergName")
                        .HasColumnType("text");

                    b.Property<string>("EmergState")
                        .HasColumnType("text");

                    b.Property<string>("EmergZip")
                        .HasColumnType("text");

                    b.Property<int>("EmptyPayPerMile")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndServiceDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("LoadedParPerMile")
                        .HasColumnType("integer");

                    b.Property<string>("MedCard")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("PayByHours")
                        .HasColumnType("integer");

                    b.Property<int>("PayMethod")
                        .HasColumnType("integer");

                    b.Property<string>("SSNumber")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<int>("TonnagePay")
                        .HasColumnType("integer");

                    b.Property<int>("WHAmount")
                        .HasColumnType("integer");

                    b.Property<int>("WHCategory")
                        .HasColumnType("integer");

                    b.Property<DateTime>("WHDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("WHDescription")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("driverprofiles");
                });

            modelBuilder.Entity("DataAccess.Models.Expense", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("APU")
                        .HasColumnType("integer");

                    b.Property<string>("APUHours")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CodeZip")
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("ExpenseCategory")
                        .HasColumnType("integer");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("integer");

                    b.Property<int>("MR")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("PMTruck")
                        .HasColumnType("integer");

                    b.Property<int>("Payment")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("Receipt")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<int>("Trailer")
                        .HasColumnType("integer");

                    b.Property<string>("TrailerMileage")
                        .HasColumnType("text");

                    b.Property<int>("TripID")
                        .HasColumnType("integer");

                    b.Property<int>("Truck")
                        .HasColumnType("integer");

                    b.Property<string>("TruckMileage")
                        .HasColumnType("text");

                    b.Property<int>("VendorID")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("expenses");
                });

            modelBuilder.Entity("DataAccess.Models.Insurance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("AgencyName")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CodeZip")
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("PhoneTollFree")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("insurances");
                });

            modelBuilder.Entity("DataAccess.Models.PhoneBook", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("Birthay")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CodeZip")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("HomePhone")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("text");

                    b.Property<string>("MyProperty")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("WorkPhone")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("phoneBooks");
                });

            modelBuilder.Entity("DataAccess.Models.RVExpenses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("iDRevenue")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("rvexpenses");
                });

            modelBuilder.Entity("DataAccess.Models.RVFuel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Advance")
                        .HasColumnType("integer");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<int>("DEF")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Mileage")
                        .HasColumnType("integer");

                    b.Property<int>("Payment")
                        .HasColumnType("integer");

                    b.Property<int>("PreMileage")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("RF")
                        .HasColumnType("integer");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<int>("Total")
                        .HasColumnType("integer");

                    b.Property<int>("TruckStop")
                        .HasColumnType("integer");

                    b.Property<int>("iDRevenue")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("rvfuels");
                });

            modelBuilder.Entity("DataAccess.Models.RVNotes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("iDRevenue")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("rvnotes");
                });

            modelBuilder.Entity("DataAccess.Models.RVPickupDrop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("AppoinmentDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ArrivaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTime>("DepartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DetentioPay")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("Odometer")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PickupDropDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProNumber")
                        .HasColumnType("integer");

                    b.Property<string>("ShipperReceive")
                        .HasColumnType("text");

                    b.Property<string>("SignedFor")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<int>("TotalTime")
                        .HasColumnType("integer");

                    b.Property<int>("iDRevenue")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("rvpickupDrops");
                });

            modelBuilder.Entity("DataAccess.Models.Receipt", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte>("ReceiptPhoto")
                        .HasColumnType("smallint");

                    b.HasKey("id");

                    b.ToTable("receipts");
                });

            modelBuilder.Entity("DataAccess.Models.Revenue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ChassisID")
                        .HasColumnType("integer");

                    b.Property<string>("Client")
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .HasColumnType("text");

                    b.Property<int>("DeadHeadFrom")
                        .HasColumnType("integer");

                    b.Property<int>("DeadHeadMiles")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Driver")
                        .HasColumnType("text");

                    b.Property<int>("EndCityST")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EndOdometer")
                        .HasColumnType("integer");

                    b.Property<int>("FlatRate")
                        .HasColumnType("integer");

                    b.Property<int>("LasEmptyOdometer")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastEmpytDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LoadDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LoadMiles")
                        .HasColumnType("integer");

                    b.Property<int>("LoadOdometer")
                        .HasColumnType("integer");

                    b.Property<int>("LoadStatus")
                        .HasColumnType("integer");

                    b.Property<int>("LoadTemp")
                        .HasColumnType("integer");

                    b.Property<int>("LoadType")
                        .HasColumnType("integer");

                    b.Property<int>("PayAmount")
                        .HasColumnType("integer");

                    b.Property<int>("PayCategory")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PersonalMiles")
                        .HasColumnType("integer");

                    b.Property<int>("PieceCount")
                        .HasColumnType("integer");

                    b.Property<int>("SealNumber")
                        .HasColumnType("integer");

                    b.Property<int>("StartCitySt")
                        .HasColumnType("integer");

                    b.Property<int>("TotalMiles")
                        .HasColumnType("integer");

                    b.Property<int>("TotalOtherPay")
                        .HasColumnType("integer");

                    b.Property<int>("TotalTripPay")
                        .HasColumnType("integer");

                    b.Property<int>("TrailerID")
                        .HasColumnType("integer");

                    b.Property<int>("TruckID")
                        .HasColumnType("integer");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.Property<string>("loadID")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("revenues");
                });

            modelBuilder.Entity("DataAccess.Models.TrailersProfile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Axels")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Make")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("OwnerName")
                        .HasColumnType("text");

                    b.Property<byte>("Photo")
                        .HasColumnType("smallint");

                    b.Property<int>("PmMileage")
                        .HasColumnType("integer");

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.Property<string>("TireSize")
                        .HasColumnType("text");

                    b.Property<int>("TrailerNumber")
                        .HasColumnType("integer");

                    b.Property<int>("VinNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("trailersprofiles");
                });

            modelBuilder.Entity("DataAccess.Models.TrucksProfile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Axles")
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("EmptyWgt")
                        .HasColumnType("text");

                    b.Property<string>("EngineMake")
                        .HasColumnType("text");

                    b.Property<string>("EnginePower")
                        .HasColumnType("text");

                    b.Property<string>("EngineSN")
                        .HasColumnType("text");

                    b.Property<string>("FuelTank")
                        .HasColumnType("text");

                    b.Property<string>("Make")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("OwnerName")
                        .HasColumnType("text");

                    b.Property<byte>("Photo")
                        .HasColumnType("smallint");

                    b.Property<int>("PmMileage")
                        .HasColumnType("integer");

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.Property<string>("TireSize")
                        .HasColumnType("text");

                    b.Property<string>("TransType")
                        .HasColumnType("text");

                    b.Property<string>("TruckColor")
                        .HasColumnType("text");

                    b.Property<int>("TruckNumber")
                        .HasColumnType("integer");

                    b.Property<int>("VinNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("trucksprofiles");
                });

            modelBuilder.Entity("DataAccess.Models.VendorCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("vendorcategories");
                });

            modelBuilder.Entity("DataAccess.Models.Vendors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Addres")
                        .HasColumnType("text");

                    b.Property<string>("Addres2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CodeZip")
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("text");

                    b.Property<string>("Lat")
                        .HasColumnType("text");

                    b.Property<string>("Long")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<int>("TaxID")
                        .HasColumnType("integer");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("venderidcode")
                        .HasColumnType("text");

                    b.Property<string>("website")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("vendors");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.Administration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("authorization")
                        .HasColumnType("text");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("nick")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("administrations");
                });

            modelBuilder.Entity("Perfect_Freight_Manager.Models.ShipperReceiver", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("address2")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("codezip")
                        .HasColumnType("text");

                    b.Property<string>("directions")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("officeday")
                        .HasColumnType("text");

                    b.Property<string>("phoneemergency")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("website")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("shipperreceivers");
                });
#pragma warning restore 612, 618
        }
    }
}
